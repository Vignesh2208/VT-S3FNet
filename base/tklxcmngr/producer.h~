#ifndef __PRODUCER_H
#define __PRODUCER_H

#include "ring_buffer.h"
#include <pcap/pcap.h>
#include <arpa/inet.h>
#include <netinet/if_ether.h>
#include <sys/socket.h>
#include <sys/mman.h>
#include <net/ethernet.h>
#include <netinet/ip_icmp.h>//Provides declarations for icmp header
#include <netinet/udp.h>   //Provides declarations for udp header
#include <netinet/tcp.h>   //Provides declarations for tcp header
#include <netinet/ip.h>    //Provides declarations for ip header
#include <stdlib.h>
#include <string.h>
#include <fcntl.h>
#include <sys/uio.h>
#include <sys/shm.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>
#include <pthread.h>



extern ringBufS * buffer_ptr;
extern char *dev_name;
extern char dev_ip_address[100];
extern char errbuf[PCAP_ERRBUF_SIZE];
extern struct sockaddr_in source,dest;
extern char src_ip[100];
extern char dst_ip[100];




#ifdef  __cplusplus
      extern  "C" {
#endif

void my_callback(const struct pcap_pkthdr* pkthdr, const u_char*  packet,int fp);
pcap_t* producer_init(int fp);
int run(pcap_t *descr,int fp);


#ifdef  __cplusplus
      }
#endif
#endif

