Attempting to set static arp entries ...
Tracer: 1 >> Using SRC IP: 10.1.59.130 for any spawned virtual tcp-stacks
Tracer: 1 >> Updating firewall rules to drop outgoing TCP-RST packets
Attempting to set firewall rules ...
Tracer: 1 >> CMD TO RUN: /home/vignesh/VT-S3FNet/csudp/tcp_incast_tgen/incast_tgen server 0 10.1.59.130 7891 4 > /home/vignesh/VT-S3FNet/experiment-data/TCP_LA_Enabled_incast_tgen_nemus_5_txSize_2000/server.log
args[0] = /home/vignesh/VT-S3FNet/csudp/tcp_incast_tgen/incast_tgen
args[1] = server
args[2] = 0
args[3] = 10.1.59.130
args[4] = 7891
args[5] = 4
Setting appropriate environment variables ...
HOME DIRECTORY : /home/vignesh
Parsing TTN config file: /home/vignesh/.ttn/projects.db
Setting VT_L1_INS_CACHE_MISS_CYCLES to: 100
Setting VT_L1_INS_CACHE_LINES to: 64
Setting VT_L1_INS_CACHE_SIZE_KB to: 32
Setting VT_L1_INS_CACHE_ASSOC to: 8
Setting VT_L1_INS_CACHE_REPLACEMENT_POLICY to: LRU
Setting VT_L1_DATA_CACHE_MISS_CYCLES to: 100
Setting VT_L1_DATA_CACHE_LINES to: 64
Setting VT_L1_DATA_CACHE_SIZE_KB to: 32
Setting VT_L1_DATA_CACHE_ASSOC to: 8
Setting VT_L1_DATA_CACHE_REPLACEMENT_POLICY to: LRU
Setting VT_CPU_CYLES_NS to: 2.700000
Setting VT_NIC_SPEED_MBPS to: 1000.000000
Setting VT_TIMING_MODEL to: EMPIRICAL
Setting VT_BBL_LOOKAHEAD_FILE to: /home/vignesh/VT-S3FNet/csudp/tcp_incast_tgen/.ttn/lookahead/bbl_lookahead.info
Setting VT_LOOP_LOOKAHEAD_FILE to: /home/vignesh/VT-S3FNet/csudp/tcp_incast_tgen/.ttn/lookahead/loop_lookahead.info
Starting command: /home/vignesh/VT-S3FNet/csudp/tcp_incast_tgen/incast_tgen
Loading orig functions !
Starting executable with Pid = 6
Loading pointers to VTL Logic functions
Loaded pointers to all VTL Logic functions
Now Initializing VT-Management 
Extracting env variables !
Extracted tracer-id: 1
Extracted exp-type: 2
Extracted cpu-cycles-ns: 2.700000
Extracted socket-layer-ip: -2110062326
Starting VT-initialization !
Tracer-ID: 1, Timeline-ID: 1
Tracer registration for EXP_CS complete. TimelineID = 1, Return = 1
Tracer Adding to SQ. Tracer ID = 1
Parsing any provided lookahead information ...
Opening file: /home/vignesh/VT-S3FNet/csudp/tcp_incast_tgen/.ttn/lookahead/bbl_lookahead.info
File size: 368
mapped memblock size: 368
Finish offset: 42, Number of values: 42
Returning success !
Loaded BBL lookaheads for 42 basic blocks ...
Opening file: /home/vignesh/VT-S3FNet/csudp/tcp_incast_tgen/.ttn/lookahead/loop_lookahead.info
File size: 48
mapped memblock size: 48
Finish offset: 2, Number of values: 2
Returning success !
Loaded Loop lookaheads for 2 loops ...
VT initialization successfull !
Finished Initializing VT-Management 
Initializing TCP-stack ...
TCP stack unique-id: 16
Starting virtual socket layer stack-thread !
Pthread_create: vtStackThread special case
Successfully initialized VTL-Logic embedded into the executable

------------------------- ACTUAL STDOUT FROM EXECUTABLE STARTS -----------------------------

Adding new Thread: 8
Adding new Thread: 9
Adding new Thread: 10
Adding new Thread: 11
Signal Burst Completion: Flushing Data Cache !
Resuming new Thread with Burst of length: 5400
Adding new vt-tcp-socket !
Creating vt-tcp socket !
Server: MyPid: 6
Welcome socket fd = 4097
setsockopt through vt-tcp !
setsockopt through vt-tcp !
Binding to server port: 7891
bind through vt-tcp !
Listening for new connections ...
listen through vt-tcp !
Listening
Accepting new connections ...
Accept through vt-tcp !
Signal Burst Completion: Flushing Data Cache !
Resuming new Thread with Burst of length: 5400
Adding new vt-tcp-socket !
Creating vt-tcp socket !
Server: MyPid: 6
Welcome socket fd = 4098
setsockopt through vt-tcp !
setsockopt through vt-tcp !
Binding to server port: 7892
bind through vt-tcp !
Listening for new connections ...
listen through vt-tcp !
Listening
Accepting new connections ...
Accept through vt-tcp !
Signal Burst Completion: Flushing Data Cache !
Resuming new Thread with Burst of length: 5400
Adding new vt-tcp-socket !
Creating vt-tcp socket !
Server: MyPid: 6
Welcome socket fd = 4099
setsockopt through vt-tcp !
setsockopt through vt-tcp !
Binding to server port: 7893
bind through vt-tcp !
Listening for new connections ...
listen through vt-tcp !
Listening
Accepting new connections ...
Accept through vt-tcp !
Signal Burst Completion: Flushing Data Cache !
Resuming new Thread with Burst of length: 5400
Adding new vt-tcp-socket !
Creating vt-tcp socket !
Server: MyPid: 6
Welcome socket fd = 4100
setsockopt through vt-tcp !
setsockopt through vt-tcp !
Binding to server port: 7894
bind through vt-tcp !
Listening for new connections ...
listen through vt-tcp !
Listening
Accepting new connections ...
Accept through vt-tcp !
setsockopt through vt-tcp !
New Socket fd = 4101
Sending msgs of size: 1460 to client ...
Trigger syscall finish: 8, currActiveThreadID = 11, myThreadID = 8. Flushing Data Cache !
setsockopt through vt-tcp !
New Socket fd = 4103
Sending msgs of size: 1460 to client ...
Trigger syscall finish: 10, currActiveThreadID = 8, myThreadID = 10. Flushing Data Cache !
setsockopt through vt-tcp !
New Socket fd = 4102
Sending msgs of size: 1460 to client ...
Trigger syscall finish: 9, currActiveThreadID = 10, myThreadID = 9. Flushing Data Cache !
setsockopt through vt-tcp !
New Socket fd = 4104
Sending msgs of size: 1460 to client ...
Trigger syscall finish: 11, currActiveThreadID = 9, myThreadID = 11. Flushing Data Cache !
Trigger syscall finish: 9, currActiveThreadID = 11, myThreadID = 9. Flushing Data Cache !
Trigger syscall finish: 10, currActiveThreadID = 9, myThreadID = 10. Flushing Data Cache !
Trigger syscall finish: 11, currActiveThreadID = 10, myThreadID = 11. Flushing Data Cache !
Trigger syscall finish: 9, currActiveThreadID = 11, myThreadID = 9. Flushing Data Cache !
Trigger syscall finish: 11, currActiveThreadID = 9, myThreadID = 11. Flushing Data Cache !
Server received: 1 MBs of data
Trigger syscall finish: 10, currActiveThreadID = 11, myThreadID = 10. Flushing Data Cache !
Trigger syscall finish: 8, currActiveThreadID = 10, myThreadID = 8. Flushing Data Cache !
Trigger syscall finish: 11, currActiveThreadID = 8, myThreadID = 11. Flushing Data Cache !
Trigger syscall finish: 10, currActiveThreadID = 11, myThreadID = 10. Flushing Data Cache !
Trigger syscall finish: 8, currActiveThreadID = 10, myThreadID = 8. Flushing Data Cache !
Trigger syscall finish: 11, currActiveThreadID = 8, myThreadID = 11. Flushing Data Cache !
Trigger syscall finish: 8, currActiveThreadID = 11, myThreadID = 8. Flushing Data Cache !
Server received: 1 MBs of data
Trigger syscall finish: 9, currActiveThreadID = 8, myThreadID = 9. Flushing Data Cache !
Trigger syscall finish: 10, currActiveThreadID = 9, myThreadID = 10. Flushing Data Cache !
Server received: 1 MBs of data
Trigger syscall finish: 11, currActiveThreadID = 10, myThreadID = 11. Flushing Data Cache !
Server received: 2 MBs of data
Trigger syscall finish: 8, currActiveThreadID = 11, myThreadID = 8. Flushing Data Cache !
Trigger syscall finish: 11, currActiveThreadID = 8, myThreadID = 11. Flushing Data Cache !
Trigger syscall finish: 10, currActiveThreadID = 11, myThreadID = 10. Flushing Data Cache !
Trigger syscall finish: 11, currActiveThreadID = 10, myThreadID = 11. Flushing Data Cache !
Trigger syscall finish: 8, currActiveThreadID = 11, myThreadID = 8. Flushing Data Cache !
Trigger syscall finish: 10, currActiveThreadID = 8, myThreadID = 10. Flushing Data Cache !
Trigger syscall finish: 9, currActiveThreadID = 10, myThreadID = 9. Flushing Data Cache !
Server received: 1 MBs of data
Trigger syscall finish: 10, currActiveThreadID = 9, myThreadID = 10. Flushing Data Cache !
Server received: 2 MBs of data
Trigger syscall finish: 8, currActiveThreadID = 10, myThreadID = 8. Flushing Data Cache !
Server received: 2 MBs of data
Trigger syscall finish: 9, currActiveThreadID = 8, myThreadID = 9. Flushing Data Cache !
Trigger syscall finish: 11, currActiveThreadID = 9, myThreadID = 11. Flushing Data Cache !
Server received: 3 MBs of data
Trigger syscall finish: 8, currActiveThreadID = 11, myThreadID = 8. Flushing Data Cache !
Trigger syscall finish: 10, currActiveThreadID = 8, myThreadID = 10. Flushing Data Cache !
Trigger syscall finish: 9, currActiveThreadID = 10, myThreadID = 9. Flushing Data Cache !
Trigger syscall finish: 8, currActiveThreadID = 9, myThreadID = 8. Flushing Data Cache !
Exp finishing. Stopping stack thread with id: 6!
